# My primary PGP key. I use one PGP key with all my email addresses added as
# UID's, but if you have specific keys for specific accounts you might want to
# look at the various hooks that mutt supports.
set pgp_default_key="0xBEA7B180B1491921"

# We use the Qubes split PGP feature, which means we cannot use GPGME. Sadly.
set crypt_use_gpgme=no

# We cheat here and claim we use the GPG agent. This makes mutt not prompt for
# a passphrase. The passphrase would have been unused since the actual prompt
# for a passphrase comes from the Qubes AppVM that contains the secret key.
set pgp_use_gpg_agent=yes

# set pgp_decode_command="qubes-gpg-client-wrapper --status-fd=2 --batch - %f"
unset pgp_decode_command
set pgp_decrypt_command="qubes-gpg-client-wrapper --status-fd=2 --batch --decrypt %f"
set pgp_verify_command="qubes-gpg-client-wrapper --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"
set pgp_sign_command="qubes-gpg-client-wrapper --batch --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="qubes-gpg-client-wrapper --batch --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="/usr/libexec/neomutt/pgpewrap qubes-gpg-client-wrapper --batch --textmode --armor --always-trust %?a?--encrypt-to %a? --encrypt -- -r %r -- %f | sed -e '2iCharset: UTF-8'"
set pgp_encrypt_sign_command="/usr/libexec/neomutt/pgpewrap qubes-gpg-client-wrapper --batch --textmode --armor --always-trust %?a?--encrypt-to %a? --encrypt --sign %?a?-u %a? -- -r %r -- %f | sed -e '2iCharset: UTF-8'"
unset pgp_import_command # ="qubes-gpg-import-key %f"
set pgp_export_command="gpg --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="qubes-gpg-client-wrapper --no-verbose --batch --quiet --with-colons --list-keys %r"
set pgp_list_secring_command="qubes-gpg-client-wrapper --no-verbose --batch --quiet --with-colons --list-secret-keys %r"
set crypt_verify_sig=yes

# vim: set ft=neomuttrc :
